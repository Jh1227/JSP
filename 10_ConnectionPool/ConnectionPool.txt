
< ConnectionPool.txt >

# Connection Pool
- 데이터베이스에 연결하기 위한 connection 은 객체입니다
  connection 객체를 생성하고 해제하는 동안 시스템 자원이 소모됩니다
  이 문제를 해결하기 위해서 connection pools 에 컨넥션 객체를 만들어 놓은 후에,
  컨넥션 객체가 필요한 경우 객체를 할당해 주고, 사용이 끝나면 다시 컨넥션 풀로 회수하는 방법입니다
  
# JNDI ( Java Naming and Directory Interface )
- Java 소프트웨어에서 객체나 데이터의 전체 경로를 몰라도 '이름'만으로 찾아쓰는 디렉터리 서비스 입니다

# JNDI 를 통해 사용하는 순서
- 1. server.xml 과 context.xml 에 설정한 대로 컨넥션 풀을 생성합니다
  2. JSP 코드에서 JNDI 서버로부터 데이터소스 객체를 얻어옵니다
  3. 데이터소스로부터 컨넥션 객체를 가져옵니다
  4. DB 작업 수행
  5. DB 작업이 끝나면 컨넥션 객체를 풀로 반환
  
# jar 파일 추가
- tomcat server 설치 폴더안에 기본 제공됩니다
  > lib -> tomcat-dbcp.jar
  
# DBCP( DataBase Connection Pool ) 정보 설정
- META-INF 폴더
  > context.xml : connection pool 설정 파일
  
  








